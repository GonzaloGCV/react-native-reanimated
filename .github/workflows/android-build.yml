name: Test Android build
on:
  pull_request:
    paths:
      - '.github/workflows/android-build.yml'
      - 'android/**'
      - 'Common/**'
      - 'Example/android/**'
      - 'FabricExample/android/**'
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        working-directory: [Example, FabricExample]
    concurrency:
      group: android-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Install NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21d

      - name: Set ANDROID_NDK
        run: echo "ANDROID_NDK=$ANDROID_HOME/ndk-bundle" >> $GITHUB_ENV

      - name: Accept licenses
        run: /bin/bash -c "yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null"

      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: 'yarn'

      - name: Restore Reanimated node_modules from cache
        uses: actions/cache@v2
        id: cache-node-modules-reanimated
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node-modules-reanimated-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-reanimated

      - name: Install Reanimated node_modules
        run: yarn install --frozen-lockfile

      - name: Restore app node_modules from cache
        uses: actions/cache@v2
        id: cache-node-modules-app
        with:
          path: |
            ${{ matrix.working-directory }}/node_modules
          key: ${{ runner.os }}-node-modules-${{ matrix.working-directory }}-${{ hashFiles('${{ matrix.working-directory }}/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ matrix.working-directory }}-

      - name: Install app node_modules
        working-directory: ${{ matrix.working-directory }}
        run: yarn install --frozen-lockfile

      - name: Restore Hermes build from cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ matrix.working-directory }}/node_modules/react-native/ReactAndroid/hermes-engine
          key: ${{ runner.os }}-hermes-engine2-${{ matrix.working-directory }}-${{ hashFiles('${{ matrix.working-directory }}/node_modules/react-native/sdks/.hermesversion') }}

      - name: Restore Gradle from cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ matrix.working-directory }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ matrix.working-directory }}-

      - name: Restore downloads from cache
        uses: actions/cache@v3
        with:
          path: |
            android/build/downloads
            ${{ matrix.working-directory }}/node_modules/react-native/ReactAndroid/build/downloads
          key: ${{ runner.os }}-downloads-${{ matrix.working-directory }}-${{ hashFiles('android/build.gradle') }}

      - name: Build app
        working-directory: ${{ matrix.working-directory }}/android
        run: ./gradlew assembleDebug --build-cache --console=plain -PreactNativeArchitectures=arm64-v8a
